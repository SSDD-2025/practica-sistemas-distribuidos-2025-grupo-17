openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
- url: https://localhost:8443
  description: Generated server url
paths:
  /api/users/me:
    get:
      tags:
      - user-rest-controller
      operationId: me
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
    put:
      tags:
      - user-rest-controller
      operationId: replaceUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
    delete:
      tags:
      - user-rest-controller
      operationId: deleteUser
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
  /api/movies/{id}:
    get:
      tags:
      - movie-rest-controller
      operationId: getMovie
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/MovieDTO"
    put:
      tags:
      - movie-rest-controller
      operationId: replaceMovie
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MovieDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/MovieDTO"
    delete:
      tags:
      - movie-rest-controller
      operationId: deleteMovie
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/MovieDTO"
  /api/movies/{id}/image:
    get:
      tags:
      - movie-rest-controller
      operationId: getMovieImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    put:
      tags:
      - movie-rest-controller
      operationId: replaceMovieImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                imageFile:
                  type: string
                  format: binary
              required:
              - imageFile
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - movie-rest-controller
      operationId: deleteMovieImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/cast/{id}:
    get:
      tags:
      - cast-rest-controller
      operationId: getCast
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CastDTO"
    put:
      tags:
      - cast-rest-controller
      operationId: replaceCast
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CastBasicDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CastDTO"
    delete:
      tags:
      - cast-rest-controller
      operationId: deleteCast
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CastDTO"
  /api/cast/{id}/image:
    get:
      tags:
      - cast-rest-controller
      operationId: getCastImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    put:
      tags:
      - cast-rest-controller
      operationId: replaceCastImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                imageFile:
                  type: string
                  format: binary
              required:
              - imageFile
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - cast-rest-controller
      operationId: deleteCastImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/users/:
    post:
      tags:
      - user-rest-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
  /api/myReviews/:
    get:
      tags:
      - review-rest-controller
      operationId: getMyReviews
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ReviewDTO"
    post:
      tags:
      - review-rest-controller
      operationId: createReview
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateReviewDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReviewDTO"
  /api/movies/:
    get:
      tags:
      - movie-rest-controller
      operationId: getAllMovies
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MovieDTO"
    post:
      tags:
      - movie-rest-controller
      operationId: createMovie
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateMovieDTO"
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/MovieDTO"
  /api/cast/:
    get:
      tags:
      - cast-rest-controller
      operationId: getAllCast
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CastDTO"
    post:
      tags:
      - cast-rest-controller
      operationId: createCast
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCastDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CastDTO"
  /api/auth/refresh:
    post:
      tags:
      - login-rest-controller
      operationId: refreshToken
      parameters:
      - name: RefreshToken
        in: cookie
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/auth/logout:
    post:
      tags:
      - login-rest-controller
      operationId: logOut
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/auth/login:
    post:
      tags:
      - login-rest-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/movies/{id}/reviews:
    get:
      tags:
      - movie-rest-controller
      operationId: getMovieReviews
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ReviewDTO"
  /api/movies/{id}/reviews/paginated:
    get:
      tags:
      - movie-rest-controller
      operationId: getPaginatedReviewsByMovie
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 5
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageReviewDTO"
  /api/movies/paginated:
    get:
      tags:
      - movie-rest-controller
      operationId: getPaginatedMovies
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageMovieDTO"
  /api/cast/paginated:
    get:
      tags:
      - cast-rest-controller
      operationId: getPaginatedCast
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageCastDTO"
  /api/myReviews/{reviewId}:
    delete:
      tags:
      - review-rest-controller
      operationId: deleteReview
      parameters:
      - name: reviewId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReviewDTO"
components:
  schemas:
    CreateUserDTO:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        roles:
          type: array
          items:
            type: string
    MovieBasicDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        argument:
          type: string
        year:
          type: integer
          format: int32
        trailer:
          type: string
    ReviewBasicDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        text:
          type: string
        author:
          $ref: "#/components/schemas/UserBasicDTO"
        movie:
          $ref: "#/components/schemas/MovieBasicDTO"
    UserBasicDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        roles:
          type: array
          items:
            type: string
    UserDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        roles:
          type: array
          items:
            type: string
        reviews:
          type: array
          items:
            $ref: "#/components/schemas/ReviewBasicDTO"
    CastBasicDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        biography:
          type: string
        birthDate:
          type: string
        originCountry:
          type: string
    MovieDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        argument:
          type: string
        year:
          type: integer
          format: int32
        trailer:
          type: string
        cast:
          type: array
          items:
            $ref: "#/components/schemas/CastBasicDTO"
        reviews:
          type: array
          items:
            $ref: "#/components/schemas/ReviewBasicDTO"
        image:
          type: string
    CastDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        biography:
          type: string
        birthDate:
          type: string
        originCountry:
          type: string
        movies:
          type: array
          items:
            $ref: "#/components/schemas/MovieBasicDTO"
        image:
          type: string
    CreateReviewDTO:
      type: object
      properties:
        title:
          type: string
        text:
          type: string
        movieId:
          type: integer
          format: int64
    ReviewDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        text:
          type: string
        author:
          $ref: "#/components/schemas/UserBasicDTO"
        movie:
          $ref: "#/components/schemas/MovieBasicDTO"
    CreateMovieDTO:
      type: object
      properties:
        name:
          type: string
        argument:
          type: string
        year:
          type: integer
          format: int32
        trailer:
          type: string
        castIds:
          type: array
          items:
            type: integer
            format: int64
    CreateCastDTO:
      type: object
      properties:
        name:
          type: string
        biography:
          type: string
        birthDate:
          type: string
        originCountry:
          type: string
        movieIds:
          type: array
          items:
            type: integer
            format: int64
    AuthResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - SUCCESS
          - FAILURE
        message:
          type: string
        error:
          type: string
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    PageReviewDTO:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: "#/components/schemas/ReviewDTO"
        number:
          type: integer
          format: int32
        sort:
          $ref: "#/components/schemas/SortObject"
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: "#/components/schemas/PageableObject"
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: "#/components/schemas/SortObject"
        unpaged:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        unsorted:
          type: boolean
        sorted:
          type: boolean
    PageMovieDTO:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: "#/components/schemas/MovieDTO"
        number:
          type: integer
          format: int32
        sort:
          $ref: "#/components/schemas/SortObject"
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: "#/components/schemas/PageableObject"
        empty:
          type: boolean
    PageCastDTO:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: "#/components/schemas/CastDTO"
        number:
          type: integer
          format: int32
        sort:
          $ref: "#/components/schemas/SortObject"
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: "#/components/schemas/PageableObject"
        empty:
          type: boolean
